<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:salesforceconfig.properties</value>
		</property>
	</bean>
	<bean id="salesforce"
		class="org.apache.camel.component.salesforce.SalesforceComponent">

		<property name="loginConfig">
			<bean class="org.apache.camel.component.salesforce.SalesforceLoginConfig">
				<property name="loginUrl" value="${loginUrl}"></property>
				<property name="userName" value="${userName}"></property>
				<property name="password" value="${password}"></property>
				<property name="clientId" value="${clientId}"></property>
				<property name="clientSecret" value="${clientSecret}"></property>
			</bean>
		</property>
		<property name="config">
			<bean
				class="org.apache.camel.component.salesforce.SalesforceEndpointConfig">
				<property name="sObjectName" value="${sObjectName}"></property>
				<property name="sObjectClass" value="${sObjectClass}"></property>
			</bean>
		</property>
		<property name="packages" value="${sObjectDTOPackages}"></property>
	</bean>
  	<bean id="myOpportunityAggregator"
		class="com.redhat.salesforce.OpportunityAggregator" />
		
  	<camelContext xmlns="http://camel.apache.org/schema/spring">
  <restConfiguration component="jetty" port="9191" bindingMode="json"/>
  <rest path="/opportunity">
    <get uri="/getList">
      <to uri="direct:getOppoRecentList"/>
    </get>
    <get uri="/updateOppos/{oppnum}/{status}">
      <to uri="direct:updateStatus"/>
    </get>
  </rest>
 
  <route id="getList">
    <from uri="direct:getOppDetail"/>
    <marshal>
            <json library="Jackson" prettyPrint="true"/>
    </marshal>
    <setHeader headerName="sObjectId">
    	<jsonpath>id</jsonpath>        
  	</setHeader>
  	<log message="IDIDIDID: ${headers.sObjectId}"/>
  	<to uri="salesforce:getSObject?sObjectName=Opportunity" />
  	<log message="return from salesforce ${body}"/>
  	<to uri="seda:aggregate"/>
  </route>
  <route id="getOppoRecentList">
    <from uri="direct:getOppoRecentList"/>
    <to uri="salesforce:getBasicInfo"/>
    <log message="Query result back from Salesforce: ${body}"/>
    <marshal>
            <json library="Jackson" prettyPrint="true"/>
    </marshal>
    <split>
    	 <jsonpath suppressExceptions="true">recentItems</jsonpath>
    	 <log message="${body}"/>
    	 <to uri="direct:getOppDetail"/>
    </split>
  </route>
  
  <route id="aggregateOpps">
	  <from uri="seda:aggregate"/>
	  <aggregate strategyRef="myOpportunityAggregator" completionTimeout="5000">
	    <correlationExpression>
	      <constant>true</constant>
	    </correlationExpression>
	    <log message="FINISHES ==> ${body}"/>
	  </aggregate>
	  
  </route>
  
  <route id="updateOpps">
    <from uri="direct:updateStatus"/>
    <to uri="salesforce:getSObject?sObjectName=Opportunity&amp;sObjectIdName=AccountId&amp;sObjectIdValue=0012800000dg9xOAAQ"/>
    <log message="Query result back from Salesforce: ${body}"/>
  </route>
</camelContext>

</beans>
